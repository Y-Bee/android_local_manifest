From 4a7a276d4c76158a1148e2c7c276668c9e3813b4 Mon Sep 17 00:00:00 2001
From: Konsta <konsta09@gmail.com>
Date: Mon, 19 Aug 2013 13:03:28 +0300
Subject: [PATCH 5/8] cmhw: USB charging (2/2)

Change-Id: Ia627239addddd45adaf4fc617c6904495660de73
---
 res/values/cm_strings.xml                          |    4 ++
 res/xml/more_device_settings.xml                   |   11 ++++
 .../android/settings/cyanogenmod/BootReceiver.java |    1 +
 .../settings/cyanogenmod/MoreDeviceSettings.java   |   58 +++++++++++++++++++-
 4 files changed, 73 insertions(+), 1 deletion(-)

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 5d54d54..e5a4806 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -736,6 +736,10 @@ two in order to insert additional control points. \'Remove\' deletes the selecte
     <string name="gamma_tuning_brightness">Brightness</string>
     <string name="gamma_tuning_saturation">Saturation</string>
 
+    <!-- Hardware tunables - USB charging -->
+    <string name="usb_charging_title">USB charging</string>
+    <string name="usb_charging_summary">Charge battery when connected in USB mode</string>
+
     <!-- Category title for headset specific Settings.
          [CHAR LIMIT=40] -->
     <string name="headset_category_title">Headset</string>
diff --git a/res/xml/more_device_settings.xml b/res/xml/more_device_settings.xml
index cec7926..4094a49 100644
--- a/res/xml/more_device_settings.xml
+++ b/res/xml/more_device_settings.xml
@@ -51,4 +51,15 @@
 
     </PreferenceCategory>
 
+    <PreferenceCategory
+        android:key="usb_charging_category"
+        android:title="@string/usb_charging_title" >
+
+        <CheckBoxPreference
+            android:key="usb_charging"
+            android:title="@string/usb_charging_title"
+            android:summary="@string/usb_charging_summary"/>
+
+    </PreferenceCategory>
+
 </PreferenceScreen>
diff --git a/src/com/android/settings/cyanogenmod/BootReceiver.java b/src/com/android/settings/cyanogenmod/BootReceiver.java
index 85d9b5e..62a9715 100644
--- a/src/com/android/settings/cyanogenmod/BootReceiver.java
+++ b/src/com/android/settings/cyanogenmod/BootReceiver.java
@@ -79,6 +79,7 @@ public class BootReceiver extends BroadcastReceiver {
         DisplaySettings.restore(ctx);
         LocationSettings.restore(ctx);
         ButtonSettings.restoreKeyDisabler(ctx);
+        MoreDeviceSettings.restore(ctx);
     }
 
     private void initFreqCapFiles(Context ctx)
diff --git a/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java b/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java
index bff45bc..ebab20c 100644
--- a/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java
+++ b/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java
@@ -17,9 +17,15 @@
 package com.android.settings.cyanogenmod;
 
 import android.content.Context;
+import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.os.Vibrator;
+import android.preference.CheckBoxPreference;
+import android.preference.Preference;
 import android.preference.PreferenceGroup;
+import android.preference.PreferenceManager;
+import android.preference.PreferenceScreen;
+import android.util.Log;
 
 import com.android.settings.R;
 import com.android.settings.SettingsPreferenceFragment;
@@ -27,6 +33,8 @@ import com.android.settings.hardware.DisplayColor;
 import com.android.settings.hardware.DisplayGamma;
 import com.android.settings.hardware.VibratorIntensity;
 
+import org.cyanogenmod.hardware.UsbCharging;
+
 public class MoreDeviceSettings extends SettingsPreferenceFragment {
     private static final String TAG = "MoreDeviceSettings";
 
@@ -34,6 +42,10 @@ public class MoreDeviceSettings extends SettingsPreferenceFragment {
     private static final String KEY_DISPLAY_CALIBRATION_CATEGORY = "display_calibration_category";
     private static final String KEY_DISPLAY_COLOR = "color_calibration";
     private static final String KEY_DISPLAY_GAMMA = "gamma_tuning";
+    private static final String KEY_USB_CHARGING_CATEGORY = "usb_charging_category";
+    private static final String KEY_USB_CHARGING = "usb_charging";
+
+    private CheckBoxPreference mUsbCharging;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -59,11 +71,55 @@ public class MoreDeviceSettings extends SettingsPreferenceFragment {
                 calibrationCategory.removePreference(findPreference(KEY_DISPLAY_GAMMA));
             }
         }
+
+        final PreferenceGroup usbChargingCategory =
+                (PreferenceGroup) findPreference(KEY_USB_CHARGING_CATEGORY);
+        mUsbCharging = (CheckBoxPreference) findPreference(KEY_USB_CHARGING);
+
+        if (isUsbChargingSupported()) {
+            mUsbCharging.setChecked(UsbCharging.isEnabled());
+        } else {
+            getPreferenceScreen().removePreference(usbChargingCategory);
+        }
+    }
+
+    @Override
+    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {
+        if (preference == mUsbCharging) {
+            return UsbCharging.setEnabled(mUsbCharging.isChecked());
+        }
+        return super.onPreferenceTreeClick(preferenceScreen, preference);
+    }
+
+    /**
+     * Restore the properties associated with this preference on boot
+     * @param context A valid context
+     */
+    public static void restore(Context context) {
+        if (isUsbChargingSupported()) {
+            final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+            final boolean enabled = prefs.getBoolean(KEY_USB_CHARGING, true);
+            if (!UsbCharging.setEnabled(enabled)) {
+                Log.e(TAG, "Failed to restore USB charging settings.");
+            } else {
+                Log.d(TAG, "USB charging settings restored.");
+            }
+        }
+    }
+
+    private static boolean isUsbChargingSupported() {
+        try {
+            return UsbCharging.isSupported();
+        } catch (NoClassDefFoundError e) {
+            // Hardware abstraction framework not installed
+            return false;
+        }
     }
 
     public static boolean hasItems() {
         return DisplayColor.isSupported() ||
                DisplayGamma.isSupported() ||
-               VibratorIntensity.isSupported();
+               VibratorIntensity.isSupported() ||
+               isUsbChargingSupported();
     }
 }
-- 
1.7.9.5

